{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/contributing/","result":{"data":{"markdownRemark":{"html":"<h2>Contributing to Monodeploy</h2>\n<h3>Quick Setup (Optional)</h3>\n<p>Just for initial setup.</p>\n<pre><code class=\"language-bash\">. script/bootstrap\n</code></pre>\n<h3>Getting Started</h3>\n<p>Optionally install nvm to ensure you're using the correct version of node. You can find the node version in the <code>.nvmrc</code> file.</p>\n<p>Install dependencies.</p>\n<pre><code class=\"language-bash\">yarn\n</code></pre>\n<p>and then install the git hooks:</p>\n<pre><code class=\"language-bash\">yarn husky install\n</code></pre>\n<p>This project uses <a href=\"https://www.typescriptlang.org/\">Typescript</a> and <a href=\"https://yarnpkg.com/\">Yarn Berry</a>.</p>\n<h3>Tests</h3>\n<p>Start the mock registry:</p>\n<pre><code class=\"language-bash\">yarn test:registry\n</code></pre>\n<p>and then run the tests:</p>\n<pre><code class=\"language-bash\">yarn test\n</code></pre>\n<p>You can run <code>yarn test:registry:logs</code> to see a live stream of the registry logs.</p>\n<p>During development, you can usue the watch mode to have tests autorun on file changes:</p>\n<pre><code class=\"language-bash\">yarn test:watch\n</code></pre>\n<h3>Build</h3>\n<p>You can execute <code>yarn build</code> to generate the build assets that ultimately gets uploaded to the NPM registry. It will also leave the intermediate <code>lib</code> artifacts, which contain the transpiled code.</p>\n<p>You can use <code>yarn workspaces foreach -p build:watch</code> to rebuild the lib directory (minus typescript definitions) on source file change.</p>\n<p>To regenerate typescript definition files (and to catch type violations):</p>\n<pre><code class=\"language-bash\">yarn workspaces foreach -p types:watch\n</code></pre>\n<h3>Using Example Monorepo</h3>\n<p>After building the code (via above watch commands), run:</p>\n<pre><code class=\"language-bash\">yarn node packages/cli/lib/cli.js --cwd &#x3C;PATH_TO_EXAMPLE_MONOREPO> \\\n    --dry-run --log-level 0 \\\n    --conventional-changelog-config @tophat/conventional-changelog-config\n</code></pre>\n<h3>Tips</h3>\n<h4>Configuring Your IDE</h4>\n<h5>VSCode</h5>\n<p>You'll need to download the <a href=\"https://marketplace.visualstudio.com/items?itemName=arcanis.vscode-zipfs\">ZipFS</a> extension to be able to use functionality such as \"Go To Definition\" with the zipped npm packages.</p>\n<p>In a Typescript file, <kbd>Cmd + Shift + P</kbd> will open the command menu. Select \"TypeScript: Select Typescript Version...\" and use the version from the workspace.</p>\n<h4>Debugging Yarn API Packages</h4>\n<p>You can unpack all yarn zips via:</p>\n<pre><code class=\"language-bash\">yarn unplug @yarnpkg/*\n</code></pre>\n<p>This will let you inspect yarn source code to debug stack traces.</p>","frontmatter":{"slug":"/contributing","title":"Contributing - Monodeploy"}}},"pageContext":{"id":"b18b545d-2df1-5e7f-8732-43936e49f4f3","frontmatter__slug":"/contributing","__params":{"frontmatter__slug":"contributing"}}},"staticQueryHashes":["3649515864","63159454"]}